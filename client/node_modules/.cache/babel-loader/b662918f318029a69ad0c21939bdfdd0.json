{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Interpolation\\\\Newton.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Col, Row, Tabs } from 'antd';\nimport axios from 'axios';\nvar TabPane = Tabs.TabPane;\nvar fx = \"\";\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar x, y, interpolatePoint, tempTag;\n\nvar Newton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Newton, _Component);\n\n  function Newton() {\n    var _this;\n\n    _classCallCheck(this, Newton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Newton).call(this));\n    x = [];\n    y = [];\n    interpolatePoint = [];\n    tempTag = [];\n    _this.state = {\n      nPoints: 0,\n      X: 0,\n      data: [],\n      loading: true,\n      error: false,\n      interpolatePoint: 0,\n      Input: true,\n      InputButton: true,\n      Inputdb: true,\n      interpolatePButtondb: true,\n      interpolatePInput: false,\n      interpolatePButton: false,\n      Output: false,\n      Outputdb: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newton_difference = _this.newton_difference.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Newton, [{\n    key: \"createTableInput\",\n    value: function createTableInput(n) {\n      for (var i = 1; i <= n; i++) {\n        x.push(React.createElement(Input, {\n          style: {\n            width: 80,\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: 5,\n            marginBlockEnd: 5,\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n        y.push(React.createElement(Input, {\n          style: {\n            width: 80,\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: 5,\n            marginBlockEnd: 5,\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"y\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        Input: false,\n        InputButton: false,\n        interpolatePInput: true,\n        interpolatePButton: true\n      });\n    }\n  }, {\n    key: \"createInterpolatePointInput\",\n    value: function createInterpolatePointInput() {\n      for (var i = 1; i <= this.state.interpolatePoint; i++) {\n        tempTag.push(React.createElement(Input, {\n          style: {\n            width: 60,\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"p\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"C\",\n    value: function C(x1, x2) {\n      return (y[x1] - y[x2]) / (x[x1] - x[x2]);\n    }\n  }, {\n    key: \"newton_difference\",\n    value: function newton_difference(n, X) {\n      console.log(this.state.X);\n\n      if (this.state.X === 0) {\n        console.log(\"ddddddddddddddddddddddddddd\");\n        this.initialValuedb();\n      } else {\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n        this.initialValue();\n      }\n\n      var C = this.C(interpolatePoint[n], interpolatePoint[1]); //C1\n\n      var count = 1;\n      fx = y[interpolatePoint[1]] + C * (parseInt(this.state.X) - x[1]); //fx = C0 + C1(x-x0)\n\n      if (n !== 2) {\n        do {\n          for (var i = n; i >= 2; i--) {\n            C -= this.C(interpolatePoint[i], interpolatePoint[i - 1]);\n          }\n\n          C /= interpolatePoint[n] - interpolatePoint[1];\n\n          for (i = 1; i <= n; i++) {\n            C *= X - x[i];\n          }\n\n          fx += C;\n          count++;\n        } while (count !== n);\n      }\n\n      if (this.state.X === 0) {\n        this.setState({\n          Outputdb: true // showMatrixBottondb: false\n\n        });\n      } else {\n        this.setState({\n          Output: true //showMatrixBotton: false\n\n        });\n      }\n    }\n  }, {\n    key: \"initialValue\",\n    value: function initialValue() {\n      x = [];\n      y = [];\n\n      for (var i = 1; i <= this.state.nPoints; i++) {\n        x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n        y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n      }\n\n      for (i = 1; i <= this.state.interpolatePoint; i++) {\n        interpolatePoint[i] = parseInt(document.getElementById(\"p\" + i).value);\n      }\n    }\n  }, {\n    key: \"initialValuedb\",\n    value: function initialValuedb() {\n      x = [];\n      y = [];\n\n      for (var i = 1; i <= this.state.data[9].a; i++) {\n        x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n        y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n      }\n\n      for (i = 1; i <= this.state.data[9].a; i++) {\n        interpolatePoint[i] = parseInt(document.getElementById(\"p\" + i).value);\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data);\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[8]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#fff1b8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Newton's Divided Differences Interpolation\"), React.createElement(\"div\", {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Insert by Yourself\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px'\n        },\n        title: \"Insert Eqation\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.interpolatePInput && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"X\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), x, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), \"Y\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), y), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"interpolatePoint \", parseInt(this.state.interpolatePoint)), tempTag), this.state.Input && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Number of points(n)\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"nPoints\",\n        style: {\n          backgroud: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"X\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"X\",\n        style: {\n          color: '#000fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"interpolatePoint\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"interpolatePoint\",\n        style: {\n          hight: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), \"  \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), this.state.InputButton && React.createElement(Button, {\n        onClick: function onClick() {\n          _this3.createTableInput(parseInt(_this3.state.nPoints));\n\n          _this3.createInterpolatePointInput();\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), this.state.interpolatePButton && React.createElement(Button, {\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        onClick: function onClick() {\n          return _this3.newton_difference(parseInt(_this3.state.interpolatePoint), parseFloat(_this3.state.X));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.state.Output && React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: \"50%\",\n          border: \"1px solid black\",\n          background: \"#9254de\",\n          color: \"white\",\n          float: \"left\",\n          marginInlineStart: \"4%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, fx))))), React.createElement(TabPane, {\n        tab: \"Insert By Database\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px',\n          background: '#d6e4ff'\n        },\n        title: \"Eqation from Database\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.Inputdb && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"X\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + 1,\n        value: this.state.data[9].x11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + 2,\n        value: this.state.data[9].x12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + 3,\n        value: this.state.data[9].x13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), \" \", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + 4,\n        value: this.state.data[9].x21,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"x\" + 5,\n        value: this.state.data[9].x22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \" Y\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + 1,\n        value: this.state.data[9].x23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + 2,\n        value: this.state.data[9].x31,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + 3,\n        value: this.state.data[9].x32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), \" \", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \" \", React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + 4,\n        value: this.state.data[9].x33,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"y\" + 5,\n        value: this.state.data[9].y1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Point\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + 1,\n        value: this.state.data[9].y2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + 2,\n        value: this.state.data[9].xl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + 3,\n        value: this.state.data[9].xr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + 4,\n        value: this.state.data[9].x0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(Input, {\n        style: {\n          width: 80,\n          height: \"50%\",\n          margin: \"1%\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        id: \"p\" + 5,\n        value: this.state.data[9].n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), this.state.interpolatePButtondb && React.createElement(Button, {\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#030852',\n          background: '#fff0f6'\n        },\n        onClick: function onClick() {\n          return _this3.newton_difference(parseInt(_this3.state.data[9].a), parseFloat(_this3.state.data[9].x));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, this.state.Outputdb && React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: 500,\n          border: \"2px solid black\",\n          background: \"#9254de\",\n          color: \"white\",\n          float: \"left\",\n          marginInlineStart: \"4%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, fx)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Newton;\n}(Component);\n\nexport default Newton;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Interpolation/Newton.js"],"names":["React","Component","Card","Input","Button","Col","Row","Tabs","axios","TabPane","fx","callback","key","console","log","x","y","interpolatePoint","tempTag","Newton","state","nPoints","X","data","loading","error","InputButton","Inputdb","interpolatePButtondb","interpolatePInput","interpolatePButton","Output","Outputdb","handleChange","bind","newton_difference","n","i","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","setState","x1","x2","initialValuedb","initialValue","C","count","parseInt","parseFloat","document","getElementById","value","a","event","target","name","get","then","res","catch","err","padding","backgroud","hight","createTableInput","createInterpolatePointInput","marginLeft","background","border","float","marginInlineStart","margin","x11","x12","x13","x21","x22","x23","x31","x32","x33","y1","y2","xl","xr","x0"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {  Card, Input, Button, Col, Row, Tabs } from 'antd';\nimport axios from 'axios';\nconst { TabPane } = Tabs;\nvar fx = \"\";\nfunction callback(key) {\n    console.log(key);\n}\nvar x, y,  interpolatePoint, tempTag\nclass Newton extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            data: [],\n            loading: true,\n            error: false,\n            interpolatePoint: 0,\n            Input: true,\n            InputButton: true,\n            Inputdb: true,\n            interpolatePButtondb: true,\n            interpolatePInput: false,\n            interpolatePButton: false,\n            Output: false,\n            Outputdb: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newton_difference = this.newton_difference.bind(this);\n\n    }\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: 80,\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: 5,\n                marginBlockEnd: 5,\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i}/>);\n            y.push(<Input style={{\n                width: 80,\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: 5,\n                marginBlockEnd: 5,\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} />);\n\n        }\n        this.setState({\n            Input: false,\n            InputButton: false,\n            interpolatePInput: true,\n            interpolatePButton: true\n        })\n    }\n    createInterpolatePointInput() {\n        for (var i = 1; i <= this.state.interpolatePoint; i++) {\n            tempTag.push(<Input style={{\n                width: 60,\n                height: \"50%\",\n                backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"p\" + i}   />)\n        }\n    }\n    \n\n    C(x1, x2) {\n        return (y[x1] - y[x2]) / (x[x1] - x[x2]);\n\n    }\n\n    newton_difference(n, X) {\n        \n        console.log(this.state.X);\n        if (this.state.X === 0) {\n            console.log(\"ddddddddddddddddddddddddddd\");\n            this.initialValuedb()\n        }\n        else {\n            console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaa\")\n            this.initialValue()\n        }\n\n        var C = this.C(interpolatePoint[n], interpolatePoint[1]) //C1\n        var count = 1\n        fx = y[interpolatePoint[1]] + C * (parseInt(this.state.X) - x[1]); //fx = C0 + C1(x-x0)\n        if (n !== 2) {\n            do {\n                for (var i = n; i >= 2; i--) {\n                    C -= this.C(interpolatePoint[i], interpolatePoint[i - 1]);\n                }\n                C /= (interpolatePoint[n] - interpolatePoint[1]);\n                for (i = 1; i <= n; i++) {\n                    C *= X - x[i];\n                }\n                fx += C;\n                count++;\n            } while (count !== n);\n             \n        }\n\n        if (this.state.X === 0) {\n            this.setState({\n                Outputdb: true\n                // showMatrixBottondb: false\n            });\n        }\n        else {\n            this.setState({\n                Output: true\n                //showMatrixBotton: false\n            });\n        }\n\n    }\n    initialValue() {\n        x = []\n        y = []\n        for (var i = 1; i <= this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n        for (i = 1; i <= this.state.interpolatePoint; i++) {\n            interpolatePoint[i] = parseInt(document.getElementById(\"p\" + i).value);\n        }\n    }\n    initialValuedb() {\n        x = []\n        y = []\n        for (var i = 1; i <= this.state.data[9].a; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n        for (i = 1; i <= this.state.data[9].a; i++) {\n            interpolatePoint[i] = parseInt(document.getElementById(\"p\" + i).value);\n        }\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    componentDidMount() {\n        axios.get('http://localhost:5000/api/bisectionfxs')\n            .then(res => {\n                const data = res.data.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n\n\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data[8]) { // if request failed or data is empty don't try to access it either\n            return (\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n            \n                <div style={{ backgroundColor: '#fff1b8' }} >\n                    <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Newton's Divided Differences Interpolation</h2>\n                    <div \n                        onChange={this.handleChange}\n                    >\n                        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                            <TabPane tab=\"Insert by Yourself\" key=\"1\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{ width: 350, padding: '3px' }} title=\"Insert Eqation\" bordered={false}>\n\n                                            {this.state.interpolatePInput &&\n                                                <div>\n                                                     <h2>X<br />{x}<br />Y<br />{y}</h2>\n                                                    <br /><h2>interpolatePoint {parseInt(this.state.interpolatePoint) }</h2>{tempTag}\n                                                </div>}\n\n                    \n                                           \n                                            {this.state.Input &&\n                                                <div>\n                                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={{ backgroud: 'red' }}></Input>\n                                                    <h2>X</h2><Input size=\"large\" name=\"X\" style={{ color: '#000fff' }}></Input>\n                                                    <h2>interpolatePoint</h2><Input size=\"large\" name=\"interpolatePoint\" style={{ hight: 300 }}></Input>\n                                                </div>\n                                            }  <br></br>\n                                             {this.state.InputButton &&\n                                                <Button \n                                                onClick={() => {\n                                                        this.createTableInput(parseInt(this.state.nPoints));\n                                                        this.createInterpolatePointInput()\n                                                    }\n                                                }\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>\n                                                    Submit<br></br>\n                                                </Button>\n                                            }\n                                           \n                                            \n                                            {this.state.interpolatePButton&&\n                                                <Button\n                                            \n                                                    style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}\n                                                    onClick={() => this.newton_difference(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                                    Submit\n                                                </Button>\n                                            }\n\n                                        </Card>\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.Output &&\n                                            <Card\n                                                bordered={true}\n                                                style={{ width: \"50%\", border: \"1px solid black\", background: \"#9254de\", color: \"white\", float: \"left\", marginInlineStart: \"4%\" }}\n                                            >\n                                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{fx}</p>\n                                            </Card>\n                                        }\n\n                                    </Col>\n                                </Row>\n\n                            </TabPane>\n                            <TabPane tab=\"Insert By Database\" key=\"2\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{ width: 350, padding: '3px', background: '#d6e4ff' }} title=\"Eqation from Database\" bordered={false}>\n\n                                          {this.state.Inputdb &&\n                                              <div><h2>X<br /></h2>\n                                                <h2>\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"x\"+1} value={this.state.data[9].x11} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"x\"+ 2} value={this.state.data[9].x12} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"x\"+ 3} value={this.state.data[9].x13} />\n                                               </h2> <h2>\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"x\" +4} value={this.state.data[9].x21} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"x\" +5} value={this.state.data[9].x22} />\n                                            </h2><br />\n                                            <h2> Y<br />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"y\" +1} value={this.state.data[9].x23} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"y\" +2} value={this.state.data[9].x31} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"y\" + 3} value={this.state.data[9].x32} />\n                                              </h2> <h2> <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"y\" + 4} value={this.state.data[9].x33} />\n                                                <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"y\" + 5} value={this.state.data[9].y1} />\n                                            </h2>\n\n                                            <h2>\n                                                    Point<br />\n                                                    <h1> \n                                                    <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                    id={\"p\" + 1} value={this.state.data[9].y2} />\n                                                                            \n                                                    <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                        id={\"p\" + 2} value={this.state.data[9].xl} />\n                                                    <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                        id={\"p\" + 3} value={this.state.data[9].xr} />\n                                                     <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                        id={\"p\" + 4} value={this.state.data[9].x0} />\n                                                     <Input style={{ width: 80, height: \"50%\", margin: \"1%\", fontSize: \"18px\", fontWeight: \"bold\" }}\n                                                        id={\"p\" + 5} value={this.state.data[9].n} />\n                                                    </h1>\n                                                </h2>\n                                            </div>\n                                            }\n                                            <br></br>\n                                            {this.state.interpolatePButtondb &&\n                                                <Button\n                                            \n                                                    style={{ fontSize: \"20px\", marginLeft: 90, color: '#030852', background: '#fff0f6' }}\n                                                    onClick={() => this.newton_difference(parseInt(this.state.data[9].a), parseFloat(this.state.data[9].x))}>\n                                                    Submit\n                                                </Button>\n                                            }\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                                {this.state.Outputdb &&\n                                                    <Card\n                                                        title={\"Output\"}\n                                                        bordered={true}\n                                                        style={{ width: 500, border: \"2px solid black\", background: \"#9254de\", color: \"white\", float: \"left\", marginInlineStart: \"4%\" }}\n                                                    >\n                                                        <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{fx}</p>\n\n                                                    </Card>\n                                                }\n                                                <br /><br />\n                                    </Col>\n                                </Row>\n\n                            </TabPane>\n\n                        </Tabs>\n                    </div>\n\n                    <br />\n\n                </div>\n\n        );\n    }\n}\nexport default Newton;\n\n\n\n"]},"metadata":{},"sourceType":"module"}