{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Root\\\\Bisection.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table, Row, Col, Tabs } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nvar TabPane = Tabs.TabPane;\n\nvar math = require('mathjs');\n\nvar datainTable = [];\nvar curvexl = [];\nvar curvexr = [];\nvar curvexm = [];\nvar curvexl1 = [];\nvar curvexr1 = [];\nvar curvexm1 = [];\nvar funcxl = [];\nvar funcxr = [];\nvar funcxm = [];\nvar curveerror = [];\nvar fxl = [];\nvar fxr = [];\nvar x = [];\nvar fError = [];\nvar iteration = [];\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"Xl\",\n  dataIndex: \"xl\",\n  key: \"xl\"\n}, {\n  title: \"Xr\",\n  dataIndex: \"xr\",\n  key: \"xr\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\nvar xingraph = math.range(1, 3, 0.5).toArray();\nvar fx = \" \";\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar Bisection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Bisection, _Component);\n\n  function Bisection() {\n    var _this;\n\n    _classCallCheck(this, Bisection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Bisection).call(this));\n    _this.state = {\n      fx: \"\",\n      xl: 0,\n      xr: 0,\n      Output: false,\n      Graph: false,\n      Outputdb: false,\n      Graphdb: false,\n      data: [],\n      loading: true,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.bisection = _this.bisection.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Bisection, [{\n    key: \"bisection\",\n    value: function bisection(xl, xr) {\n      if (this.state.fx !== \"\") {\n        fx = this.state.fx;\n      } else {\n        fx = this.state.data[0].fx;\n      }\n\n      var xm = 0;\n      var sumerror = parseFloat(0.000000);\n      var i = 0;\n\n      do {\n        xm = (xl + xr) / 2;\n\n        if (this.func(xm) * this.func(xr) < 0) {\n          sumerror = Math.abs((xm - xr) / xm);\n          xl = xm;\n        } else {\n          sumerror = Math.abs((xm - xl) / xm);\n          xr = xm;\n        }\n\n        funcxl[i] = this.func(xl).toFixed(6);\n        funcxr[i] = this.func(xr).toFixed(6); //funcxm[i] = this.func(xm).toFixed(6);\n\n        iteration[i] = i;\n        fxl[i] = xl.toFixed(6);\n        fxr[i] = xr.toFixed(6);\n        x[i] = xm.toFixed(6);\n        fError[i] = Math.abs(sumerror).toFixed(6);\n        i++;\n      } while (Math.abs(sumerror) > 0.000001);\n\n      this.createTable(fxl, fxr, x, fError);\n      console.log(funcxl);\n      console.log(fxl);\n      curvexl = {\n        name: 'Xl',\n        x: iteration,\n        y: fxl\n      };\n      curvexr = {\n        name: 'xr',\n        x: iteration,\n        y: fxr\n      };\n      curvexm = {\n        name: 'xm',\n        x: iteration,\n        y: x\n      };\n      curveerror = {\n        name: 'error',\n        x: iteration,\n        y: fError\n      };\n\n      if (this.state.fx !== \"\") {\n        this.setState({\n          Output: true,\n          Graph: true\n        });\n      } else {\n        this.setState({\n          Outputdb: true,\n          Graphdb: true\n        });\n      }\n    } //https://books.google.co.th/books?id=Xuh1DwAAQBAJ&pg=PA39&lpg=PA39&dq=let+scope+%3D+%7Bx:parseFloat(X)+%7D;&source=bl&ots=a20KyuHXsa&sig=ACfU3U3S4dR87m5s53bx1-3XQD1NWzD0jw&hl=th&sa=X&ved=2ahUKEwjM9uCet67oAhW49nMBHQVADEwQ6AEwCnoECAoQAQ#v=onepage&q=let%20scope%20%3D%20%7Bx%3AparseFloat(X)%20%7D%3B&f=false\n\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      if (this.state.fx !== \"\") {\n        var variable = math.compile(this.state.fx);\n        var scope = {\n          //x ใช้หลายที่เลยให้ let เพื่อกำหนด scope\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variable.eval(scope); //eval compile 'String'\n      } else {\n        var variables = math.compile(this.state.data[0].fx);\n        var _scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variables.eval(_scope); //eval compile 'String'\n      }\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(xl, xr, x, error) {\n      datainTable = [];\n\n      for (var i = 0; i < xl.length; i++) {\n        datainTable.push({\n          iteration: i + 1,\n          xl: xl[i],\n          xr: xr[i],\n          x: x[i],\n          error: error[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data); // fx = this.state.data[0];\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[0]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return (// <Content style={{ padding: 24, minHeight: 2000, backgroundColor: '#fff1b8' }}>\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Bisection\"), React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#fff1b8'\n          },\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(Tabs, {\n          defaultActiveKey: \"1\",\n          onChange: callback,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabBarStyle: {\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          tab: \"Insert by Yourself\",\n          key: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(Col, {\n          style: {\n            width: 400\n          },\n          span: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(Card, {\n          headStyle: {\n            color: 'black',\n            fontWeight: \"bold\"\n          },\n          style: {\n            width: 350,\n            padding: '3px'\n          },\n          title: \"Insert Eqation\",\n          bordered: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Equation\"), React.createElement(Input, {\n          size: \"large\",\n          name: \"fx\",\n          style: {\n            width: 300,\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"X\", React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"L\")), React.createElement(Input, {\n          size: \"large\",\n          name: \"xl\",\n          style: {\n            width: 300,\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"X\", React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"R\")), React.createElement(Input, {\n          size: \"large\",\n          name: \"xr\",\n          style: {\n            width: 300,\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.bisection(parseFloat(_this3.state.xl), parseFloat(_this3.state.xr));\n          },\n          style: {\n            fontSize: \"20px\",\n            marginLeft: 90,\n            color: '#ffffff',\n            background: '#12406A'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Submit\"))), React.createElement(Col, {\n          span: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, this.state.Graph && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n        React.createElement(Card, {\n          bordered: true,\n          style: {\n            marginBottom: 20,\n            width: 700,\n            height: 400,\n            border: \"2px solid black\",\n\n            /* background: \"#0000000\",*/\n            color: '#ffffff',\n            float: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Plot, {\n          data: [{\n            x: math.range(1, 3, 0.5).toArray(),\n            y: xingraph.map(function (x) {\n              return math.compile(fx).eval({\n                x: x\n              });\n            }),\n            type: 'scatter',\n            marker: {\n              color: 'yellow'\n            },\n            name: 'fx'\n          }, {\n            curvexl1: curvexl1,\n            curvexr1: curvexr1,\n            curvexm1: curvexm1\n          }, curvexl1 = {\n            name: 'Xl',\n            x: fxl,\n            y: funcxl,\n            marker: {\n              color: 'purple'\n            }\n          }, curvexr1 = {\n            name: 'xr',\n            x: fxr,\n            y: funcxr,\n            marker: {\n              color: 'blue'\n            }\n          }, curvexm1 = {\n            name: 'xm',\n            x: x,\n            y: funcxm,\n            marker: {\n              color: 'orange'\n            }\n          }],\n          layout: {\n            title: 'Plotfx'\n          },\n          style: {\n            width: \"50%\",\n            float: \"left\",\n            height: \"360px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }), React.createElement(Plot, {\n          data: [curvexl, curvexr, curveerror, curvexm],\n          layout: {\n            title: 'PlotX'\n          },\n          style: {\n            width: \"50%\",\n            float: \"left\",\n            height: \"360px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        })))), this.state.Output && React.createElement(\"div\", {\n          style: {\n            width: 600,\n            marginTop: 20,\n            marginLeft: 300,\n            background: '#ECECEC',\n            padding: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(Table, {\n          style: {\n            width: 500\n          },\n          columns: columns,\n          dataSource: datainTable,\n          pagination: {\n            pageSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \" \"))))), React.createElement(TabPane, {\n          tab: \"Insert By Database\",\n          key: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(Col, {\n          style: {\n            width: 400\n          },\n          span: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(Card, {\n          style: {\n            width: 350,\n            padding: '3px',\n            background: '#0050b3',\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          headStyle: {\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          title: \"Eqation from Database\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          style: {\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Equation\"), React.createElement(Input, {\n          name: \"fx\",\n          size: \"large\",\n          style: {\n            width: 300,\n            background: 'black',\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          value: this.state.data[0].fx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          style: {\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"X\", React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"L\")), React.createElement(Input, {\n          name: \"xl\",\n          size: \"large\",\n          style: {\n            width: 300,\n            background: 'black',\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          value: this.state.data[0].xl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          style: {\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"X\", React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"R\")), React.createElement(Input, {\n          name: \"xr\",\n          size: \"large\",\n          style: {\n            width: 300,\n            background: 'black',\n            color: 'white',\n            fontWeight: \"bold\"\n          },\n          value: this.state.data[0].xr,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this3.bisection(parseFloat(_this3.state.data[0].xl), parseFloat(_this3.state.data[0].xr));\n          },\n          style: {\n            fontSize: \"20px\",\n            marginLeft: 90,\n            color: '#ffffff',\n            background: '#12406A'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, \"Request\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }))), React.createElement(Col, {\n          span: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, this.state.Graphdb && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n        React.createElement(Card, {\n          bordered: true,\n          style: {\n            marginBottom: 20,\n            width: 700,\n            height: 400,\n            border: \"2px solid black\",\n\n            /* background: \"#0000000\",*/\n            color: '#ffffff',\n            float: \"left\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(Plot, {\n          data: [{\n            x: math.range(1, 3, 0.5).toArray(),\n            y: xingraph.map(function (x) {\n              return math.compile(fx).eval({\n                x: x\n              });\n            }),\n            type: 'scatter',\n            marker: {\n              color: 'yellow'\n            }\n          }, curvexl1 = {\n            name: 'Xl',\n            x: fxl,\n            y: funcxl,\n            marker: {\n              color: 'pink'\n            }\n          }, curvexr1 = {\n            name: 'xr',\n            x: fxr,\n            y: funcxr,\n            marker: {\n              color: 'purple'\n            }\n          }, curvexm1 = {\n            name: 'xm',\n            x: x,\n            y: funcxm,\n            marker: {\n              color: 'red'\n            }\n          }],\n          layout: {\n            title: 'Plotfx'\n          },\n          style: {\n            width: \"50%\",\n            float: \"left\",\n            height: \"360px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }), React.createElement(Plot, {\n          data: [curvexl, curvexr, curveerror, curvexm],\n          layout: {\n            title: 'PlotX'\n          },\n          style: {\n            width: \"50%\",\n            float: \"left\",\n            height: \"360px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        })))), this.state.Outputdb && React.createElement(\"div\", {\n          style: {\n            width: 600,\n            marginTop: 20,\n            marginLeft: 300,\n            background: '#ECECEC',\n            padding: '30px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          bordered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }, React.createElement(Table, {\n          style: {\n            width: 500\n          },\n          columns: columns,\n          dataSource: datainTable,\n          pagination: {\n            pageSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }, \" \"))))))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return Bisection;\n}(Component);\n\nexport default Bisection;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Root/Bisection.js"],"names":["React","Component","Card","Input","Button","Table","Row","Col","Tabs","Plot","axios","TabPane","math","require","datainTable","curvexl","curvexr","curvexm","curvexl1","curvexr1","curvexm1","funcxl","funcxr","funcxm","curveerror","fxl","fxr","x","fError","iteration","columns","title","dataIndex","key","xingraph","range","toArray","fx","callback","console","log","Bisection","state","xl","xr","Output","Graph","Outputdb","Graphdb","data","loading","error","handleChange","bind","bisection","xm","sumerror","parseFloat","i","func","Math","abs","toFixed","createTable","name","y","setState","X","variable","compile","scope","eval","variables","length","push","event","target","value","get","then","res","catch","err","color","fontWeight","backgroundColor","fontSize","width","padding","marginLeft","background","marginBottom","height","border","float","map","type","marker","marginTop","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table, Row, Col, Tabs } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nconst { TabPane } = Tabs;\nvar math = require('mathjs')\nvar datainTable = []\nvar curvexl = [];\nvar curvexr = [];\nvar curvexm = [];\nvar curvexl1 = [];\nvar curvexr1 = [];\nvar curvexm1 = [];\nvar funcxl=[]  \nvar funcxr=[]\nvar funcxm=[]\nvar curveerror = [];\nvar fxl = [];\nvar fxr = [];\nvar x = [];\nvar fError = [];\nvar iteration = [];\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Xl\",\n        dataIndex: \"xl\",\n        key: \"xl\"\n    },\n    {\n        title: \"Xr\",\n        dataIndex: \"xr\",\n        key: \"xr\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nconst xingraph = math.range(1, 3, 0.5).toArray();\nvar fx = \" \";\nfunction callback(key) {\n    console.log(key);\n}\nclass Bisection extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            xl: 0,\n            xr: 0,\n            Output: false,\n            Graph: false,\n            Outputdb: false,\n            Graphdb: false,\n            data: [],\n            loading: true,\n            error: false,\n\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.bisection = this.bisection.bind(this);\n    }\n\n    bisection(xl, xr) {\n        if (this.state.fx !== \"\") {\n            fx = this.state.fx;\n        }\n        else {\n            fx = this.state.data[0].fx;\n        }\n        var xm = 0;\n        var sumerror = parseFloat(0.000000);\n        var i = 0;\n\n        do {\n            xm = (xl + xr) / 2;\n            if (this.func(xm) * this.func(xr) < 0) {\n                sumerror = Math.abs((xm - xr) / xm);\n                xl = xm;\n            }\n            else {\n                sumerror = Math.abs((xm - xl) / xm);\n                xr = xm;\n            }\n            funcxl[i] = this.func(xl).toFixed(6);\n            funcxr[i] = this.func(xr).toFixed(6);\n            //funcxm[i] = this.func(xm).toFixed(6);\n            iteration[i] = i;\n            fxl[i] = xl.toFixed(6);\n            fxr[i] = xr.toFixed(6);\n            x[i] = xm.toFixed(6);\n            fError[i] = Math.abs(sumerror).toFixed(6);\n            i++;\n        } while (Math.abs(sumerror) > 0.000001);\n\n        this.createTable(fxl, fxr, x, fError);\n      console.log(funcxl)\n      console.log(fxl)\n       \n        curvexl = {\n            name: 'Xl',\n            x: iteration,\n            y: fxl\n        };\n        curvexr = {\n            name: 'xr',\n            x: iteration,\n            y: fxr,\n        };\n        curvexm = {\n            name: 'xm',\n            x: iteration,\n            y: x\n\n        };\n        curveerror = {\n            name: 'error',\n            x: iteration,\n            y: fError\n\n        };\n        if (this.state.fx !== \"\") {\n            this.setState({\n                Output: true,\n                Graph: true\n            })\n        }\n        else {\n            this.setState({\n                Outputdb: true,\n                Graphdb: true\n            })\n        }\n    }\n    //https://books.google.co.th/books?id=Xuh1DwAAQBAJ&pg=PA39&lpg=PA39&dq=let+scope+%3D+%7Bx:parseFloat(X)+%7D;&source=bl&ots=a20KyuHXsa&sig=ACfU3U3S4dR87m5s53bx1-3XQD1NWzD0jw&hl=th&sa=X&ved=2ahUKEwjM9uCet67oAhW49nMBHQVADEwQ6AEwCnoECAoQAQ#v=onepage&q=let%20scope%20%3D%20%7Bx%3AparseFloat(X)%20%7D%3B&f=false\n    func(X) {\n        if (this.state.fx !== \"\") {\n            var variable = math.compile(this.state.fx);\n            let scope = { //x ใช้หลายที่เลยให้ let เพื่อกำหนด scope\n                x:parseFloat(X) \n            }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variable.eval(scope); //eval compile 'String'\n        }\n        else {\n            var variables = math.compile(this.state.data[0].fx);\n            let scope = { \n                x: parseFloat(X) \n            }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variables.eval(scope); //eval compile 'String'\n        }\n    }\n    createTable(xl, xr, x, error) {\n        datainTable = []\n        for (var i = 0; i < xl.length; i++) {\n            datainTable.push({\n                iteration: i + 1,\n                xl: xl[i],\n                xr: xr[i],\n                x: x[i],\n                error: error[i],\n            });\n        }\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value //รันทุกครั้งเมื่อมีอินพุทใหม่เข้ามา \n        });\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/api/bisectionfxs')\n            .then(res => {\n                const data = res.data.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n                // fx = this.state.data[0];\n\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n    render() {\n         if (this.state.loading) {\n               return (\n                   <div>\n                       <p> Loading... </p>\n                   </div>\n               )\n           }\n           if (this.state.error || !this.state.data[0]) { // if request failed or data is empty don't try to access it either\n               return (\n                   <div>\n                       <p> An error occured </p>\n                   </div>\n               )\n           }\n        return (\n            // <Content style={{ padding: 24, minHeight: 2000, backgroundColor: '#fff1b8' }}>\n            <div >\n\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Bisection</h2>\n\n                <div style={{ backgroundColor: '#fff1b8' }}\n                    onChange={this.handleChange}\n                >\n                    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                        <TabPane tabBarStyle={{ fontSize: \"18px\",fontWeight: \"bold\" }} tab=\"Insert by Yourself\" key=\"1\">\n                            <Row>\n                                <Col style={{ width: 400 }} span={12}>\n                                    <Card headStyle={{ color: 'black', fontWeight: \"bold\" }} style={{ width: 350, padding: '3px' }} title=\"Insert Eqation\" bordered={false}>\n                                        <h2 style={{ fontWeight: \"bold\" }} >Equation</h2><Input size=\"large\" name=\"fx\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                        <h2 style={{ fontWeight: \"bold\" }}>X<sub>L</sub></h2>\n                                        <Input size=\"large\" name=\"xl\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                        <h2 style={{ fontWeight: \"bold\" }}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input><br /><br />\n                                        <Button onClick={() => this.bisection(parseFloat(this.state.xl), parseFloat(this.state.xr))}\n                                            style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Submit</Button>\n                                    </Card>\n                                </Col>\n                                <Col span={12}>\n                                    {this.state.Graph &&\n                                        //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                        <Card\n                                            bordered={true}\n                                            style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                        >\n                                            <Plot\n                                                data={[\n                                                    {\n                                                        x: math.range(1, 3, 0.5).toArray(),\n                                                        y: xingraph.map(function (x) {\n                                                            return math.compile(fx).eval({ x: x })\n                                                        }),\n                                                        type: 'scatter',\n                                                        marker: { color: 'yellow' },\n                                                        name: 'fx'\n                                                    },\n                                                    {\n                                                       curvexl1 , curvexr1, curvexm1\n                                                    },\n                                                    curvexl1 = {\n                                                        name: 'Xl',\n                                                        x: fxl,\n                                                        y: funcxl,\n                                                        marker: { color: 'purple' },\n                                                    },\n                                                    curvexr1 = {\n                                                        name: 'xr',\n                                                        x: fxr,\n                                                        y: funcxr,\n                                                        marker: { color: 'blue' },\n                                                    },\n                                                    curvexm1 = {\n                                                        name: 'xm',\n                                                        x: x,\n                                                        y: funcxm,\n                                                        marker: { color: 'orange' },\n                                            \n                                                    },\n                                                ]}\n                                                layout={{ title: 'Plotfx' }}\n                                                style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                            />\n                                            <Plot\n                                                data={[curvexl, curvexr, curveerror, curvexm]}\n                                                layout={{ title: 'PlotX' }}\n                                                style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                            />\n                                            <br /><br />\n                                        </Card>\n                                    }\n                                </Col>\n                            </Row>\n                            {this.state.Output &&\n                                <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                    <Card >\n\n                                        <div\n                                            bordered={true}\n                                        // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                        >\n                                            <Table style={{ width: 500 }} columns={columns} dataSource={datainTable} pagination={{ pageSize: 10 }} > </Table>\n                                        </div>\n\n                                    </Card>\n                                </div>\n                            }\n                        </TabPane>\n                        <TabPane tab=\"Insert By Database\" key=\"2\">\n                            <Row>\n                                <Col style={{ width: 400 }} span={12}>\n                                    <Card style={{ width: 350, padding: '3px', background: '#0050b3', color: 'white', fontWeight: \"bold\" }} headStyle={{ color: 'white', fontWeight: \"bold\" }} title=\"Eqation from Database\">\n\n                                        <h2 style={{ color: 'white', fontWeight: \"bold\" }}>Equation</h2>\n                                        <Input name=\"fx\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[0].fx}\n                                        />\n                                        <h2 style={{ color: 'white', fontWeight: \"bold\" }}>X<sub>L</sub></h2>\n                                        <Input name=\"xl\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[0].xl}\n                                        />\n                                        <h2 style={{ color: 'white', fontWeight: \"bold\" }}>X<sub>R</sub></h2>\n                                        <Input name=\"xr\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[0].xr} \n                                        />\n                                        <br /><br />\n                                        <Button\n                                            onClick={() => this.bisection(parseFloat(this.state.data[0].xl), parseFloat(this.state.data[0].xr))}\n                                            style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Request\n                                            </Button><br /><br />\n                                    </Card>\n                                </Col>\n                                <Col span={12}>\n                                    {this.state.Graphdb &&\n                                        //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                        <Card\n                                            bordered={true}\n                                            style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                        >\n                                            <Plot\n                                                data={[\n                                                    {\n                                                        x: math.range(1, 3, 0.5).toArray(),\n                                                        y: xingraph.map(function (x) {\n                                                            return math.compile(fx).eval({ x: x })\n                                                        }),\n                                                        type: 'scatter',\n                                                        marker: { color: 'yellow' },\n                                                    },\n                                                    curvexl1 = {\n                                                        name: 'Xl',\n                                                        x: fxl,\n                                                        y: funcxl,\n                                                        marker: { color: 'pink' },\n\n                                                    },\n                                                    curvexr1 = {\n                                                        name: 'xr',\n                                                        x: fxr,\n                                                        y: funcxr,\n                                                        marker: { color: 'purple' },\n                                                    },\n                                                    curvexm1 = {\n                                                        name: 'xm',\n                                                        x: x,\n                                                        y: funcxm,\n                                                        marker: { color: 'red' },\n                                            \n                                                    },\n                                                ]}\n                                                layout={{ title: 'Plotfx' }}\n                                                style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                            />\n                                            <Plot\n                                                data={[curvexl, curvexr, curveerror, curvexm]}\n                                                layout={{ title: 'PlotX' }}\n                                                style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                            />\n                                            <br /><br />\n                                        </Card>\n                                    }\n                                </Col>\n                            </Row>\n                            {this.state.Outputdb &&\n                                <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                    <Card >\n                                        <div\n                                            bordered={true}\n                                        >\n                                            <Table style={{ width: 500 }} columns={columns} dataSource={datainTable} pagination={{ pageSize: 10 }} > </Table>\n                                        </div>\n\n                                    </Card>\n                                </div>\n                            }\n                        </TabPane>\n\n                    </Tabs>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\nexport default Bisection;"]},"metadata":{},"sourceType":"module"}