{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Root\\\\FalsePosition.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table, Row, Col, Tabs } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nvar TabPane = Tabs.TabPane;\n\nvar math = require('mathjs');\n\nvar datainTable = [];\nvar curvexl = [];\nvar curvexr = [];\nvar curvexm = [];\nvar curveerror = [];\nvar curvexl1 = [];\nvar curvexr1 = [];\nvar curvexm1 = [];\nvar funcxl = [];\nvar funcxr = [];\nvar funcxm = [];\nvar fxl = [];\nvar fxr = [];\nvar x = [];\nvar error = [];\nvar iteration = [];\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"Xl\",\n  dataIndex: \"xl\",\n  key: \"xl\"\n}, {\n  title: \"Xr\",\n  dataIndex: \"xr\",\n  key: \"xr\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar xingraph = math.range(-5, 5, 0.5).toArray();\nvar fx = \" \";\n\nvar FalseP =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FalseP, _Component);\n\n  function FalseP() {\n    var _this;\n\n    _classCallCheck(this, FalseP);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FalseP).call(this));\n    _this.state = {\n      fx: \"\",\n      xl: 0,\n      xr: 0,\n      showOutput: false,\n      showGraph: false,\n      data: [],\n      loading: true,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.bisection = _this.bisection.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FalseP, [{\n    key: \"bisection\",\n    value: function bisection(xl, xr) {\n      if (this.state.fx !== \"\") {\n        fx = this.state.fx;\n      } else {\n        fx = this.state.data[0].fx;\n      }\n\n      var xm = 0;\n      var sum = parseFloat(0.000000);\n      var i = 0;\n\n      do {\n        xm = (xl * this.func(xr) - this.func(xl) * xr) / (this.func(xr) - this.func(xl));\n\n        if (this.func(xm) * this.func(xr) < 0) {\n          sum = Math.abs((xm - xr) / xm);\n          xl = xm;\n        } else {\n          sum = Math.abs((xm - xl) / xm);\n          xr = xm;\n        }\n\n        funcxl[i] = this.func(xl);\n        funcxr[i] = this.func(xr);\n        funcxm[i] = this.func(xm).toFixed(6);\n        iteration[i] = i;\n        fxl[i] = xl.toFixed(6);\n        fxr[i] = xr.toFixed(6);\n        x[i] = xm.toFixed(6);\n        error[i] = Math.abs(sum).toFixed(6);\n        i++;\n      } while (Math.abs(sum) > 0.000001);\n\n      this.createTable(fxl, fxr, x, error);\n      console.log(funcxl);\n      curvexl = {\n        name: 'Xl',\n        x: iteration,\n        y: fxl\n      };\n      curvexr = {\n        name: 'xr',\n        x: iteration,\n        y: fxr\n      };\n      curvexm = {\n        name: 'xm',\n        x: iteration,\n        y: x\n      };\n      curveerror = {\n        name: 'error',\n        x: iteration,\n        y: error\n      };\n\n      if (this.state.fx !== \"\") {\n        this.setState({\n          showOutput: true,\n          showGraph: true\n        });\n      } else {\n        this.setState({\n          showOutput2: true,\n          showGraph2: true\n        });\n      }\n    }\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      if (this.state.fx !== \"\") {\n        var variable = math.compile(this.state.fx);\n        var scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variable.eval(scope); //eval compile 'String'\n      } else {\n        var variables = math.compile(this.state.data[1].fx);\n        var _scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variables.eval(_scope); //eval compile 'String'\n      }\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(xl, xr, x, error) {\n      datainTable = [];\n\n      for (var i = 0; i < xl.length; i++) {\n        datainTable.push({\n          iteration: i + 1,\n          xl: xl[i],\n          xr: xr[i],\n          x: x[i],\n          error: error[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data); // fx = this.state.data[1];\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[1]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"False Position\"), React.createElement(\"div\", {\n        style: {\n          padding: 20,\n          backgroundColor: '#fff1b8'\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Insert by Yourself\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px'\n        },\n        title: \"Insert Eqation\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"fx\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"L\")), React.createElement(Input, {\n        size: \"large\",\n        name: \"xl\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"R\")), React.createElement(Input, {\n        size: \"large\",\n        name: \"xr\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.bisection(parseFloat(_this3.state.xl), parseFloat(_this3.state.xr));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.showGraph && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          }\n        }, {\n          curvexl1: curvexl1,\n          curvexr1: curvexr1,\n          curvexm1: curvexm1\n        }, curvexl1 = {\n          name: 'Xl',\n          x: fxl,\n          y: funcxl\n        }, curvexr1 = {\n          name: 'xr',\n          x: fxr,\n          y: funcxr\n        }, curvexm1 = {\n          name: 'xm',\n          x: x,\n          y: funcxm\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curvexl, curvexr, curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      })))), this.state.showOutput && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: datainTable,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \" \"))))), React.createElement(TabPane, {\n        tab: \"Insert By Database\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px',\n          background: '#0050b3'\n        },\n        title: \"Eqation from Database\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        name: \"fx\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[1].fx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"L\")), React.createElement(Input, {\n        name: \"xl\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[1].xl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"R\")), React.createElement(Input, {\n        name: \"xr\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[1].xr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.bisection(parseFloat(_this3.state.data[1].xl), parseFloat(_this3.state.data[1].xr));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Request\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, this.state.showGraph2 && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          },\n          name: 'fx'\n        }, curvexl1 = {\n          name: 'Xl',\n          x: fxl,\n          y: funcxl,\n          marker: {\n            color: 'orange'\n          }\n        }, curvexr1 = {\n          name: 'xr',\n          x: fxr,\n          y: funcxr,\n          marker: {\n            color: 'red'\n          }\n        }, curvexm1 = {\n          name: 'xm',\n          x: x,\n          y: funcxm,\n          marker: {\n            color: 'blue'\n          }\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curvexl, curvexr, curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })))), this.state.showOutput2 && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: datainTable,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \" \"))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FalseP;\n}(Component);\n\nexport default FalseP;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Root/FalsePosition.js"],"names":["React","Component","Card","Input","Button","Table","Row","Col","Tabs","Plot","axios","TabPane","math","require","datainTable","curvexl","curvexr","curvexm","curveerror","curvexl1","curvexr1","curvexm1","funcxl","funcxr","funcxm","fxl","fxr","x","error","iteration","columns","title","dataIndex","key","callback","console","log","xingraph","range","toArray","fx","FalseP","state","xl","xr","showOutput","showGraph","data","loading","handleChange","bind","bisection","xm","sum","parseFloat","i","func","Math","abs","toFixed","createTable","name","y","setState","showOutput2","showGraph2","X","variable","compile","scope","eval","variables","length","push","event","target","value","get","then","res","catch","err","color","fontWeight","padding","backgroundColor","width","fontSize","marginLeft","background","marginBottom","height","border","float","map","type","marker","marginTop","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table,Row, Col ,Tabs  } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nconst { TabPane } = Tabs;\nvar math = require('mathjs')\nvar datainTable = []\nvar curvexl = [];\nvar curvexr = [];\nvar curvexm = [];\nvar curveerror = [];\nvar curvexl1 = [];\nvar curvexr1 = [];\nvar curvexm1 = [];\nvar funcxl=[]  \nvar funcxr=[]\nvar funcxm=[]\nvar fxl = [];\nvar fxr = [];\nvar x = [];\nvar error = [];\nvar iteration = [];\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Xl\",\n        dataIndex: \"xl\",\n        key: \"xl\"\n    },\n    {\n        title: \"Xr\",\n        dataIndex: \"xr\",\n        key: \"xr\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\nfunction callback(key) {\n    console.log(key);\n}\nconst  xingraph = math.range(-5, 5, 0.5).toArray();\nvar fx = \" \";\nclass FalseP extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            xl: 0,\n            xr: 0,\n            showOutput: false,\n            showGraph: false,\n            data: [],\n            loading: true,\n            error: false,\n\n        } \n        this.handleChange = this.handleChange.bind(this);\n        this.bisection = this.bisection.bind(this);\n    }\n\n    bisection(xl, xr) {\n        if (this.state.fx !== \"\") {\n            fx = this.state.fx;\n        }\n        else {\n            fx = this.state.data[0].fx;\n        }\n        var xm = 0;\n        var sum = parseFloat(0.000000);\n        var i = 0;\n        \n        do {\n            xm = ((xl * this.func(xr)) - (this.func(xl) * xr)) / (this.func(xr) - this.func(xl));\n            if (this.func(xm) * this.func(xr) < 0) {\n                sum = Math.abs((xm - xr) / xm);     \n                    xl = xm;\n            }\n            else {\n                sum = Math.abs((xm - xl) / xm);             \n                    xr = xm;\n            }\n            funcxl[i] = this.func(xl);\n            funcxr[i] = this.func(xr);\n            funcxm[i] = this.func(xm).toFixed(6);\n\n            iteration[i] = i;\n            fxl[i] = xl.toFixed(6);\n            fxr[i] = xr.toFixed(6);\n            x[i] = xm.toFixed(6);\n            error[i] = Math.abs(sum).toFixed(6);\n            i++;\n        } while (Math.abs(sum) > 0.000001);\n        this.createTable(fxl, fxr, x, error);\n        console.log(funcxl)\n        curvexl = {\n            name: 'Xl',\n            x: iteration,\n            y: fxl\n        };\n        curvexr = {\n            name: 'xr',\n            x: iteration,\n            y: fxr,\n\n        };\n        curvexm = {\n            name: 'xm',\n            x: iteration,\n            y: x\n\n        };\n        curveerror = {\n            name: 'error',\n            x: iteration,\n            y: error\n\n        };\n\n        \n        if (this.state.fx !== \"\") {\n            this.setState({\n                showOutput: true,\n                showGraph: true\n\n            })\n        }\n        else {\n            this.setState({\n                showOutput2: true,\n                showGraph2: true\n\n            })\n        }\n    }\n  \n    func(X) {\n        if (this.state.fx !== \"\") {\n            var variable = math.compile(this.state.fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variable.eval(scope); //eval compile 'String'\n        }\n        else {\n            var variables = math.compile(this.state.data[1].fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variables.eval(scope); //eval compile 'String'\n        }\n    }\n    createTable(xl, xr, x, error) {\n        datainTable = []\n        for (var i = 0; i < xl.length; i++) {\n            datainTable.push({\n                iteration: i + 1,\n                xl: xl[i],\n                xr: xr[i],\n                x: x[i],\n                error: error[i],\n            });\n        }\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value //รันทุกครั้งเมื่อมีอินพุทใหม่เข้ามา \n        });\n    }\n    componentDidMount() {\n        axios.get('http://localhost:5000/api/bisectionfxs')\n            .then(res => {\n                const data = res.data.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n                // fx = this.state.data[1];\n\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data[1]) { // if request failed or data is empty don't try to access it either\n            return (\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n                <div >\n\n                    <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>False Position</h2>\n                    <div style={{ padding: 20, backgroundColor: '#fff1b8' }}\n                        onChange={this.handleChange}\n                    >\n                        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                            <TabPane tab=\"Insert by Yourself\" key=\"1\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{  width: 350, padding: '3px' }} title=\"Insert Eqation\" bordered={false}>\n                                            <h2 style={{ fontWeight: \"bold\" }}>Equation</h2><Input size=\"large\" name=\"fx\" style={{ width: 300,fontSize: \"18px\", fontWeight: \"bold\"}}></Input>\n                                            <h2 style={{ fontWeight: \"bold\" }}>X<sub>L</sub></h2>\n                                            <Input size=\"large\" name=\"xl\" style={{ width: 300,fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                            <h2 style={{ fontWeight: \"bold\" }}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={{ width: 300,fontSize: \"18px\", fontWeight: \"bold\" }}></Input><br /><br />\n\n                                            <Button onClick={() => this.bisection(parseFloat(this.state.xl), parseFloat(this.state.xr))}\n\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Submit</Button><br /><br />\n\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.showGraph &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: math.range(-5, 5, 0.5).toArray(),\n                                                            y: xingraph.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                        },\n                                                        {\n                                                            curvexl1 , curvexr1, curvexm1\n                                                         },\n                                                        curvexl1 = {\n                                                            name: 'Xl',\n                                                            x: fxl,\n                                                            y: funcxl\n                                                        },\n                                                        curvexr1 = {\n                                                            name: 'xr',\n                                                            x: fxr,\n                                                            y: funcxr,\n                                                        },\n                                                        curvexm1 = {\n                                                            name: 'xm',\n                                                            x: x,\n                                                            y: funcxm\n                                                \n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <Plot\n                                                    data={[curvexl, curvexr, curveerror, curvexm]}\n                                                    layout={{ title: 'PlotX' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n                                {this.state.showOutput &&\n                                    <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                        <Card >\n\n                                            <div\n                                                bordered={true}\n                                            // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                            >\n\n                                                <Table style={{ width: 500 }} columns={columns} dataSource={datainTable} pagination={{ pageSize: 10 }} > </Table>\n                                            </div>\n\n                                        </Card>\n                                    </div>\n                                }\n                            </TabPane>\n                            <TabPane tab=\"Insert By Database\" key=\"2\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{ width: 350, padding: '3px',background: '#0050b3' }} title=\"Eqation from Database\" bordered={false}>\n\n                                            <h2 style={{ color: 'white',fontWeight: \"bold\" }}>Equation</h2>\n                                            <Input name=\"fx\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[1].fx}\n                                            />\n                                            <h2 style={{ color: 'white',fontWeight: \"bold\" }}>X<sub>L</sub></h2>\n                                            <Input name=\"xl\" size=\"large\" style={{ width: 300, background: 'black', color: 'white' , fontWeight: \"bold\"}} value={this.state.data[1].xl}\n                                            />\n                                            <h2 style={{ color: 'white',fontWeight: \"bold\" }}>X<sub>R</sub></h2>\n                                            <Input name=\"xr\" size=\"large\" style={{ width: 300, background: 'black', color: 'white' , fontWeight: \"bold\"}} value={this.state.data[1].xr}\n                                            />\n                                            <br /><br />\n                                            <Button\n                                                onClick={() => this.bisection(parseFloat(this.state.data[1].xl), parseFloat(this.state.data[1].xr))}\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Request\n </Button><br /><br />\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.showGraph2 &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: math.range(-5, 5, 0.5).toArray(),\n                                                            y:  xingraph.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                            name:'fx'\n                                                        },\n                                                        curvexl1 = {\n                                                            name: 'Xl',\n                                                            x: fxl,\n                                                            y: funcxl,\n                                                            marker: { color: 'orange' },\n                                                        },\n                                                        curvexr1 = {\n                                                            name: 'xr',\n                                                            x: fxr,\n                                                            y: funcxr,\n                                                            marker: { color: 'red' },\n                                                        },\n                                                        curvexm1 = {\n                                                            name: 'xm',\n                                                            x: x,\n                                                            y: funcxm,\n                                                            marker: { color: 'blue' },\n                                                \n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <Plot\n                                                    data={[curvexl, curvexr, curveerror, curvexm]}\n                                                    layout={{ title: 'PlotX' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n\n                                {this.state.showOutput2 &&\n                                    <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                        <Card >\n                                            <div\n                                                bordered={true}\n                                            // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                            >\n                                                <Table style={{ width: 500 }} columns={columns} dataSource={datainTable} pagination={{ pageSize: 10 }} > </Table>\n                                            </div>\n\n                                        </Card>\n                                    </div>\n                                }\n\n\n                            </TabPane>\n\n                        </Tabs>\n                    </div>\n\n                    <br />\n                </div>\n           \n        );\n    }\n}\nexport default FalseP;"]},"metadata":{},"sourceType":"module"}