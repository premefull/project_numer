{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Integration\\\\Trapzoidal.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Col, Row, Tabs } from 'antd';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nvar TabPane = Tabs.TabPane;\nvar counterh = [];\n\nvar math = require('mathjs');\n\nvar Algebrite = require('algebrite');\n\nvar I, Integral, error;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar fx = \"\";\n\nvar Trapezoidal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Trapezoidal, _Component);\n\n  function Trapezoidal() {\n    var _this;\n\n    _classCallCheck(this, Trapezoidal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Trapezoidal).call(this));\n    _this.state = {\n      fx: \"\",\n      a: 0,\n      b: 0,\n      n: 0,\n      data: [],\n      loading: true,\n      error: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Trapezoidal, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"trapezoidal\",\n    value: function trapezoidal(a, b) {\n      if (this.state.fx !== \"\") {\n        fx = this.state.fx;\n      } else {\n        fx = this.state.data[10].fx;\n      }\n\n      var h = b - a;\n      console.log(\"h\", h);\n      var ans = a;\n      counterh[0] = ans;\n      console.log(\"ans\", ans);\n\n      for (var i = 1; i < 2; i++) {\n        ans = ans + h;\n        counterh[i] = ans;\n      }\n\n      console.log(counterh);\n      I = h / 2 * (this.func(a) + this.func(b));\n      I = I.toFixed(6);\n      console.log(\"a\", this.func(a));\n      console.log(\"b\", this.func(b));\n      Integral = this.Integrate(a, b);\n      Integral = Integral.toFixed(6);\n      error = Math.abs((Integral - I) / Integral);\n      error = error.toFixed(6);\n\n      if (this.state.fx !== \"\") {\n        this.setState({\n          Graph: true\n        });\n      } else {\n        this.setState({\n          Graphdb: true\n        });\n      }\n    }\n  }, {\n    key: \"Integrate\",\n    value: function Integrate(a, b) {\n      if (this.state.fx !== \"\") {\n        var expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.fx)).toString());\n        return expr.eval({\n          x: b\n        }) - expr.eval({\n          x: a\n        });\n      } else {\n        expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.data[10].fx)).toString());\n        return expr.eval({\n          x: b\n        }) - expr.eval({\n          x: a\n        });\n      } //https://www.npmjs.com/package/algebrite\n\n    }\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      if (this.state.fx !== \"\") {\n        var variable = math.compile(this.state.fx);\n        var scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variable.eval(scope); //eval compile 'String'\n      } else {\n        var variables = math.compile(this.state.data[6].fx);\n        var _scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variables.eval(_scope); //eval compile 'String'\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data); // fx = this.state.data[0];\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[10]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Trapzoidal\"), React.createElement(\"div\", {\n        style: {\n          padding: 20,\n          backgroundColor: '#fff1b8'\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Insert by Yourself\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px'\n        },\n        title: \"Insert Eqation\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"fx\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"lower\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"a\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Upper\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"b\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.trapezoidal(parseFloat(_this3.state.a), parseFloat(_this3.state.b));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.Graph && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: counterh,\n          y: counterh.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          name: 'fx',\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          },\n          fill: 'tozeroy'\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"I = \", I, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Integral = \", Integral, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"error = \", error, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))))), React.createElement(TabPane, {\n        tab: \"Insert By Database\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px',\n          background: '#1d39c4'\n        },\n        title: \"Eqation from Database\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        name: \"fx\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[10].fx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"lower\"), React.createElement(Input, {\n        name: \"a\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[10].a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Upper\"), React.createElement(Input, {\n        name: \"b\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[10].b,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.trapezoidal(parseFloat(_this3.state.data[10].a), parseFloat(_this3.state.data[10].b));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Request\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.state.Graphdb && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: counterh,\n          y: counterh.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          name: 'fx',\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          },\n          fill: 'tozeroy'\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"I = \", I, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Integral = \", Integral, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"error = \", error, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Trapezoidal;\n}(Component);\n\nexport default Trapezoidal;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Integration/Trapzoidal.js"],"names":["React","Component","Card","Input","Button","Col","Row","Tabs","axios","Plot","TabPane","counterh","math","require","Algebrite","I","Integral","error","callback","key","console","log","fx","Trapezoidal","state","a","b","n","data","loading","handleChange","bind","event","setState","target","name","value","h","ans","i","func","toFixed","Integrate","Math","abs","Graph","Graphdb","expr","compile","integral","eval","toString","x","X","variable","scope","parseFloat","variables","get","then","res","catch","err","color","fontWeight","padding","backgroundColor","width","fontSize","trapezoidal","marginLeft","background","marginBottom","height","border","float","y","map","type","marker","fill","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {  Card, Input, Button, Col, Row, Tabs } from 'antd';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nconst { TabPane } = Tabs;\nvar counterh=[]\nvar math = require('mathjs')\nvar Algebrite = require('algebrite')\nvar I, Integral, error;\nfunction callback(key) {\n    console.log(key);\n}\nvar fx = \"\";\nclass Trapezoidal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            a: 0,\n            b: 0,\n            n: 0,\n            data: [],\n            loading: true,\n            error: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n\n    }\n    trapezoidal(a, b) {\n        if (this.state.fx !== \"\") {\n            fx = this.state.fx;\n        }\n        else {\n            fx = this.state.data[10].fx;\n        }\n        var h = (b - a)\n        console.log(\"h\", h)\n        var ans = a;\n        counterh[0]= ans;\n        console.log(\"ans\",ans);\n        for(var i=1 ;i<2;i++){\n            ans = ans + h;\n            counterh[i] = ans; \n        }\n        console.log(counterh)\n        I = (h / 2) * (this.func(a) + this.func(b))\n        I = I.toFixed(6);\n        console.log(\"a\", this.func(a))\n        console.log(\"b\", this.func(b))\n        Integral = this.Integrate(a, b)\n        Integral = Integral.toFixed(6);\n\n        error = Math.abs((Integral - I) / Integral)\n        error = error.toFixed(6);\n        if (this.state.fx !== \"\") {\n            this.setState({\n               Graph: true\n            })\n        }\n        else {\n            this.setState({\n               Graphdb: true\n\n            })\n        }\n    }\n    Integrate(a, b) {\n        if (this.state.fx !== \"\") {\n            var expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.fx)).toString())\n            return expr.eval({ x: b }) - expr.eval({ x: a })\n        }\n        else {\n            expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.data[10].fx)).toString())\n            return expr.eval({ x: b }) - expr.eval({ x: a })\n        }\n        //https://www.npmjs.com/package/algebrite\n    }\n\n    func(X) {\n        if (this.state.fx !== \"\") {\n            var variable = math.compile(this.state.fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variable.eval(scope); //eval compile 'String'\n        }\n        else {\n            var variables = math.compile(this.state.data[6].fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variables.eval(scope); //eval compile 'String'\n        }\n    }\n    componentDidMount() {\n        axios.get('http://localhost:5000/api/bisectionfxs')\n            .then(res => {\n                const data = res.data.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n                // fx = this.state.data[0];\n\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data[10]) { // if request failed or data is empty don't try to access it either\n            return (\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n                <div >\n                    <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Trapzoidal</h2>\n                    <div style={{ padding: 20, backgroundColor: '#fff1b8' }}\n                        onChange={this.handleChange}\n                    >\n                        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                            <TabPane tab=\"Insert by Yourself\" key=\"1\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{ width: 350, padding: '3px' }} title=\"Insert Eqation\" bordered={false}>\n                                            <h2>Equation</h2><Input size=\"large\" name=\"fx\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                            <h2>lower</h2><Input size=\"large\" name=\"a\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                            <h2>Upper</h2><Input size=\"large\" name=\"b\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n\n                                            <br /><br />\n\n                                            <Button onClick={() => this.trapezoidal(parseFloat(this.state.a), parseFloat(this.state.b))}\n\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Submit</Button><br /><br />\n\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.Graph &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: counterh,\n                                                            y: counterh.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            name: 'fx',\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                            fill: 'tozeroy',\n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\n                                                    <h4>I = {I} <br /></h4>\n                                                    <h4>Integral = {Integral} <br /></h4>\n                                                    <h4>error = {error} <br /></h4>\n\n\n                                                </p>\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n\n                            </TabPane>\n                            <TabPane tab=\"Insert By Database\" key=\"2\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{ width: 350, padding: '3px', background: '#1d39c4' }} title=\"Eqation from Database\" bordered={false}>\n\n                                            <h2>Equation</h2>\n                                            <Input name=\"fx\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontSize: \"18px\", fontWeight: \"bold\" }}value={this.state.data[10].fx}\n                                            />\n                                            <h2>lower</h2>\n                                            <Input name=\"a\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontSize: \"18px\", fontWeight: \"bold\" }} value={this.state.data[10].a}\n                                            />\n                                            <h2>Upper</h2>\n                                            <Input name=\"b\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontSize: \"18px\", fontWeight: \"bold\" }} value={this.state.data[10].b}\n                                            />\n\n                                            <br /><br />\n                                            <Button\n\n                                                onClick={() => this.trapezoidal(parseFloat(this.state.data[10].a), parseFloat(this.state.data[10].b))}\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Request\n                                        </Button><br /><br />\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.Graphdb &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: counterh,\n                                                            y: counterh.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            name: 'fx',\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                            fill: 'tozeroy',\n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>\n                                                    <h4>I = {I} <br /></h4>\n                                                    <h4>Integral = {Integral} <br /></h4>\n                                                    <h4>error = {error} <br /></h4>\n\n\n                                                </p>\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n\n                            </TabPane>\n\n                        </Tabs>\n                    </div>\n\n                    <br />\n\n                </div>\n        );\n    }\n}\nexport default Trapezoidal;\n"]},"metadata":{},"sourceType":"module"}