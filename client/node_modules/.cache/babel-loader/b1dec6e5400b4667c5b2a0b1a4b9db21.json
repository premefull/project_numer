{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Root\\\\Newton-Raphson.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table, Row, Col } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport { Tabs } from 'antd';\nvar TabPane = Tabs.TabPane;\n\nvar math = require('mathjs');\n\nvar dataT = [];\nvar curvexm = [];\nvar curveerror = [];\nvar x = [];\nvar error = [];\nvar iteration = [];\nvar curvex0 = [];\nvar funcx0 = [];\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"X\",\n  dataIndex: \"x\",\n  key: \"x\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\nvar xingraph = math.range(-5, 5, 0.5).toArray();\nvar fx = \" \";\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar newtonR =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newtonR, _Component);\n\n  function newtonR() {\n    var _this;\n\n    _classCallCheck(this, newtonR);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newtonR).call(this));\n    _this.state = {\n      fx: \"\",\n      x0: 0,\n      loading: true,\n      error: false,\n      data: [],\n      Output: false,\n      Graph: false,\n      Outputdb: false,\n      Graphdb: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newtonraphson = _this.newtonraphson.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(newtonR, [{\n    key: \"newtonraphson\",\n    value: function newtonraphson(x0) {\n      if (this.state.fx !== \"\") {\n        fx = this.state.fx;\n      } else {\n        fx = this.state.data[3].fx;\n      }\n\n      var xnew = 0;\n      var sum = parseFloat(0.000000);\n      var i = 0;\n\n      do {\n        iteration[i] = i;\n        xnew = x0 - this.func(x0) / this.funcDiff(x0);\n        sum = sum = Math.abs((xnew - x0) / xnew);\n        funcx0[i] = this.func(xnew).toFixed(6); //funcxr[i] = this.func(xr).toFixed(6);\n        //funcxm[i] = this.func(xm).toFixed(6);\n\n        console.log(xnew);\n        error[i] = Math.abs(sum).toFixed(6);\n        x[i] = xnew.toFixed(6);\n        i++;\n        x0 = xnew;\n      } while (Math.abs(sum) > 0.000001);\n\n      this.createTable(x, error);\n      curvexm = {\n        name: 'x',\n        x: iteration,\n        y: x\n      };\n      curveerror = {\n        name: 'error',\n        x: iteration,\n        y: error\n      };\n\n      if (this.state.fx !== \"\") {\n        this.setState({\n          Output: true,\n          Graph: true\n        });\n      } else {\n        this.setState({\n          Outputdb: true,\n          Graphdb: true\n        });\n      }\n    }\n  }, {\n    key: \"funcDiff\",\n    value: function funcDiff(X) {\n      if (this.state.fx !== \"\") {\n        var expr = math.derivative(this.state.fx, 'x');\n        var scope = {\n          x: parseFloat(X)\n        };\n        return expr.eval(scope);\n      } else {\n        expr = math.derivative(this.state.data[3].fx, 'x');\n        var _scope = {\n          x: parseFloat(X)\n        };\n        return expr.eval(_scope);\n      }\n    }\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      if (this.state.fx !== \"\") {\n        var variable = math.compile(this.state.fx);\n        var scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variable.eval(scope); //eval compile 'String'\n      } else {\n        var variables = math.compile(this.state.data[3].fx);\n        var _scope2 = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variables.eval(_scope2); //eval compile 'String'\n      }\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(x, error) {\n      dataT = [];\n\n      for (var i = 0; i < x.length; i++) {\n        dataT.push({\n          iteration: i + 1,\n          x: x[i],\n          error: error[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data); // fx = this.state.data[0];\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[3]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Newton Raphson\"), React.createElement(\"div\", {\n        style: {\n          padding: 20,\n          backgroundColor: '#fff1b8'\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Insert by Yourself\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350\n        },\n        title: \"Insert Eqation\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"fx\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"0\")), React.createElement(Input, {\n        size: \"large\",\n        name: \"x0\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"submit\",\n        onClick: function onClick() {\n          return _this3.newtonraphson(parseFloat(_this3.state.x0));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.Graph && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          }\n        }, {\n          curvex0: curvex0\n        }, curvex0 = {\n          name: 'X',\n          x: x,\n          y: funcx0,\n          marker: {\n            color: 'orange'\n          }\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })))), this.state.Output && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: dataT,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \" \"))))), React.createElement(TabPane, {\n        tab: \"Insert By Database\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px',\n          background: '#0050b3'\n        },\n        title: \"Eqation from Database\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        name: \"fx\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[3].fx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"0\")), React.createElement(Input, {\n        name: \"xl\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[3].x0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.newtonraphson(parseFloat(_this3.state.data[3].x0));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Request\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, this.state.Graphdb && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          }\n        }, curvex0 = {\n          name: 'X',\n          x: x,\n          y: funcx0,\n          marker: {\n            color: 'red'\n          }\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      })))), this.state.Outputdb && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: dataT,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \" \"))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return newtonR;\n}(Component);\n\nexport default newtonR;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Root/Newton-Raphson.js"],"names":["React","Component","Card","Input","Button","Table","Row","Col","Plot","axios","Tabs","TabPane","math","require","dataT","curvexm","curveerror","x","error","iteration","curvex0","funcx0","columns","title","dataIndex","key","xingraph","range","toArray","fx","callback","console","log","newtonR","state","x0","loading","data","Output","Graph","Outputdb","Graphdb","handleChange","bind","newtonraphson","xnew","sum","parseFloat","i","func","funcDiff","Math","abs","toFixed","createTable","name","y","setState","X","expr","derivative","scope","eval","variable","compile","variables","length","push","event","target","value","get","then","res","catch","err","color","fontWeight","padding","backgroundColor","width","fontSize","marginLeft","background","marginBottom","height","border","float","map","type","marker","marginTop","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table, Row, Col } from 'antd';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\nvar math = require('mathjs')\nvar dataT = [] \nvar curvexm = [];\nvar curveerror = [];\nvar x = [];\nvar error = [];\nvar iteration = [];\nvar curvex0 = [];\nvar funcx0=[] \nconst columns = [\n  {\n    title: \"Iteration\",\n    dataIndex: \"iteration\",\n    key: \"iteration\"\n  },\n\n  {\n    title: \"X\",\n    dataIndex: \"x\",\n    key: \"x\"\n  },\n  {\n    title: \"Error\",\n    key: \"error\",\n    dataIndex: \"error\"\n  }\n];\n\nconst  xingraph = math.range(-5, 5, 0.5).toArray();\nvar fx = \" \";\nfunction callback(key) {\n  console.log(key);\n}\nclass newtonR extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fx: \"\",\n      x0: 0,\n      loading: true,\n      error: false,\n      data: [],\n      Output: false,\n      Graph: false,\n      Outputdb: false,\n      Graphdb: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.newtonraphson = this.newtonraphson.bind(this);\n  }\n  newtonraphson(x0) {\n    if (this.state.fx !== \"\") {\n      fx = this.state.fx;\n    }\n    else {\n      fx = this.state.data[3].fx;\n    }\n    var xnew = 0;\n    var sum = parseFloat(0.000000);\n    var i = 0;\n    do {\n      iteration[i] = i;\n      xnew = x0 - (this.func(x0) / this.funcDiff(x0));\n      sum = sum = Math.abs((xnew - x0) / xnew);    \n\n      funcx0[i] = this.func(xnew).toFixed(6);\n      //funcxr[i] = this.func(xr).toFixed(6);\n      //funcxm[i] = this.func(xm).toFixed(6);\n      console.log(xnew)\n      error[i] = Math.abs(sum).toFixed(6);\n      x[i] = xnew.toFixed(6);\n      i++;\n      x0 = xnew;\n    } while (Math.abs(sum) > 0.000001);\n\n    this.createTable(x, error);\n    curvexm = {\n      name: 'x',\n      x: iteration,\n      y: x\n\n    };\n    curveerror = {\n      name: 'error',\n      x: iteration,\n      y: error\n\n    };\n    if (this.state.fx !== \"\") {\n      this.setState({\n        Output: true,\n        Graph: true\n\n      })\n    }\n    else {\n      this.setState({\n        Outputdb: true,\n        Graphdb: true\n\n      })\n    }\n  }\n  funcDiff(X) {\n    if (this.state.fx !== \"\") {\n      var expr = math.derivative(this.state.fx, 'x');\n      let scope = { x: parseFloat(X) };\n      return expr.eval(scope);\n    }\n    else {\n      expr = math.derivative(this.state.data[3].fx, 'x');\n      let scope = { x: parseFloat(X) };\n      return expr.eval(scope);\n    }\n\n  }\n  func(X) {\n\n    if (this.state.fx !== \"\") {\n      var variable = math.compile(this.state.fx);\n      let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n      return variable.eval(scope); //eval compile 'String'\n    }\n    else {\n      var variables = math.compile(this.state.data[3].fx);\n      let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n      return variables.eval(scope); //eval compile 'String'\n    }\n  }\n  createTable(x, error) {\n    dataT = []\n    for (var i = 0; i < x.length; i++) {\n      dataT.push({\n        iteration: i + 1,\n        x: x[i],\n        error: error[i],\n      });\n    }\n  }\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value //รันทุกครั้งเมื่อมีอินพุทใหม่เข้ามา \n    });\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/api/bisectionfxs')\n      .then(res => {\n        const data = res.data.data; // get the data array instead of object\n        this.setState({ data, loading: false });\n        console.log(data);\n        // fx = this.state.data[0];\n\n      })\n      .catch(err => { // log request error and prevent access to undefined state\n        this.setState({ loading: false, error: true });\n        console.error(err);\n      })\n  }\n  render() {\n     if (this.state.loading) {\n       return (\n         <div>\n           <p> Loading... </p>\n         </div>\n       )\n     }\n     if (this.state.error || !this.state.data[3]) { // if request failed or data is empty don't try to access it either\n       return (\n         <div>\n           <p> An error occured </p>\n         </div>\n       )\n     }\n    return (\n      <div >\n        <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Newton Raphson</h2>\n        <div style={{ padding: 20, backgroundColor: '#fff1b8' }}\n          onChange={this.handleChange}\n        >\n          <Tabs defaultActiveKey=\"1\" onChange={callback}>\n            <TabPane tab=\"Insert by Yourself\" key=\"1\">\n              <Row>\n                <Col style={{ width: 400 }} span={12}>\n                  <Card style={{ width: 350 }} title=\"Insert Eqation\" bordered={false}>\n                    <h2 style={{ fontWeight: \"bold\" }} >Equation</h2><Input size=\"large\" name=\"fx\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n\n                    <h2 style={{ fontWeight: \"bold\" }}>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={{ width: 300, fontSize: \"18px\", fontWeight: \"bold\" }}></Input><br /><br />\n\n                    <Button id=\"submit\" onClick={() => this.newtonraphson(parseFloat(this.state.x0))}\n\n                      style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Submit</Button><br /><br />\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  {this.state.Graph &&\n                    //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                    <Card\n                      bordered={true}\n                      style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                    >\n                      <Plot\n                        data={[\n                          {\n                            x: math.range(-5, 5, 0.5).toArray(),\n                            y:  xingraph.map(function (x) {\n                              return math.compile(fx).eval({ x: x })\n                            }),\n                            type: 'scatter',\n                            marker: { color: 'green' },\n                          },\n                          {\n                            curvex0\n                         },\n                        curvex0 = {\n                            name: 'X',\n                            x: x,\n                            y: funcx0,\n                            marker: { color: 'orange' },\n                        },\n                        \n                       \n                        ]}\n                        layout={{ title: 'Plotfx' }}\n                        style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                      />\n                      <Plot\n                        data={[curveerror, curvexm]}\n                        layout={{ title: 'PlotX' }}\n                        style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                      />\n                      <br /><br />\n                    </Card>\n                  }\n                </Col>\n              </Row>\n              {this.state.Output &&\n                <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                  <Card >\n\n                    <div\n                      bordered={true}\n                    // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                    >\n\n                      <Table style={{ width: 500 }} columns={columns} dataSource={dataT} pagination={{ pageSize: 10 }} > </Table>\n                    </div>\n\n                  </Card>\n                </div>\n              }\n            </TabPane>\n            <TabPane tab=\"Insert By Database\" key=\"2\">\n              <Row>\n                <Col style={{ width: 400 }} span={12}>\n                  <Card style={{ width: 350, padding: '3px', background: '#0050b3' }} title=\"Eqation from Database\" bordered={false}>\n\n                    <h2 style={{ color: 'white', fontWeight: \"bold\" }}>Equation</h2>\n                    <Input name=\"fx\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[3].fx}\n                    />\n                    <h2 style={{ color: 'white', fontWeight: \"bold\" }}>X<sub>0</sub></h2>\n                    <Input name=\"xl\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[3].x0}\n                    />\n                    <br /><br />\n                    <Button\n                      onClick={() => this.newtonraphson(parseFloat(this.state.data[3].x0))}\n                      style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Request\n      </Button><br /><br />\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  {this.state.Graphdb &&\n                    //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                    <Card\n                      bordered={true}\n                      style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                    >\n                      <Plot\n                        data={[\n                          {\n                            x: math.range(-5, 5, 0.5).toArray(),\n                            y:  xingraph.map(function (x) {\n                              return math.compile(fx).eval({ x: x })\n                            }),\n                            type: 'scatter',\n                            marker: { color: 'green' },\n                          },\n                          curvex0 = {\n                            name: 'X',\n                            x: x,\n                            y: funcx0,\n                            marker: { color: 'red' },\n                        },\n                       \n                        ]}\n                        layout={{ title: 'Plotfx' }}\n                        style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                      />\n                      <Plot\n                        data={[curveerror, curvexm]}\n                        layout={{ title: 'PlotX' }}\n                        style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                      />\n                      <br /><br />\n                    </Card>\n\n                  }\n                </Col>\n              </Row>\n\n              {this.state.Outputdb&&\n                <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                  <Card >\n                    <div\n                      bordered={true}\n                    >\n                      <Table style={{ width: 500 }} columns={columns} dataSource={dataT} pagination={{ pageSize: 10 }} > </Table>\n                    </div>\n                  </Card>\n                </div>\n              }\n            </TabPane>\n          </Tabs>\n        </div>\n\n        <br />\n      </div>\n\n    );\n  }\n}\nexport default newtonR;"]},"metadata":{},"sourceType":"module"}