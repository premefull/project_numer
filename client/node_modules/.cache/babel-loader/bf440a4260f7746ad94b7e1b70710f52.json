{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\numer\\\\ProjectNumer-master\\\\ProjectNumer-master\\\\client\\\\src\\\\Root\\\\SecantMethod.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table, Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport { Tabs } from 'antd';\nvar TabPane = Tabs.TabPane;\n\nvar math = require('mathjs');\n\nvar dataT = [];\nvar curvexm = [];\nvar curveerror = [];\nvar yc = [];\nvar x = [];\nvar fError = [];\nvar iteration = [];\nvar curvex0 = [];\nvar funcx0 = [];\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"Y\",\n  dataIndex: \"y\",\n  key: \"y\"\n}, {\n  title: \"Error\",\n  key: \"error\",\n  dataIndex: \"error\"\n}];\n\nfunction callback(key) {\n  console.log(key);\n}\n\nvar xingraph = math.range(-5, 5, 0.5).toArray();\nvar fx = \" \";\n\nvar secant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(secant, _Component);\n\n  function secant() {\n    var _this;\n\n    _classCallCheck(this, secant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(secant).call(this));\n    _this.state = {\n      fx: \"\",\n      x0: 0,\n      x1: 0,\n      loading: true,\n      error: false,\n      data: [],\n      showOutput: false,\n      showGraph: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.secant = _this.secant.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(secant, [{\n    key: \"secant\",\n    value: function secant(x0, x1) {\n      if (this.state.fx !== \"\") {\n        fx = this.state.fx;\n      } else {\n        fx = this.state.data[4].fx;\n      }\n\n      var y = 0,\n          sum = parseFloat(0.000000);\n      var n = 1,\n          i = 1;\n      x.push(x0);\n      x.push(x1);\n      yc[0] = x0;\n      iteration[0] = 0;\n      fError[0] = \"-\";\n\n      do {\n        y = x[i] - this.func(x[i]) * (x[i] - x[i - 1]) / (this.func(x[i]) - this.func(x[i - 1]));\n        x.push(y);\n        sum = this.error(y, x[i]);\n        yc[n] = y.toFixed(6);\n        funcx0[i] = this.func(y).toFixed(6);\n        fError[n] = Math.abs(sum).toFixed(6);\n        iteration[i] = i;\n        n++;\n        i++;\n      } while (Math.abs(sum) > 0.000001);\n\n      this.createTable(yc, fError);\n      curvexm = {\n        name: 'y',\n        x: iteration,\n        y: yc\n      };\n      curveerror = {\n        name: 'error',\n        x: iteration,\n        y: fError\n      };\n\n      if (this.state.fx !== \"\") {\n        this.setState({\n          Output: true,\n          Graph: true\n        });\n      } else {\n        this.setState({\n          Outputdb: true,\n          Graphdb: true\n        });\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(xnew, xold) {\n      return Math.abs((xnew - xold) / xnew);\n    }\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      if (this.state.fx !== \"\") {\n        var variable = math.compile(this.state.fx);\n        var scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variable.eval(scope); //eval compile 'String'\n      } else {\n        var variables = math.compile(this.state.data[4].fx);\n        var _scope = {\n          x: parseFloat(X)\n        }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n\n        return variables.eval(_scope); //eval compile 'String'\n      }\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable(y, error) {\n      dataT = [];\n\n      for (var i = 0; i < y.length; i++) {\n        dataT.push({\n          iteration: i + 1,\n          y: y[i],\n          error: error[i]\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/api/bisectionfxs').then(function (res) {\n        var data = res.data.data; // get the data array instead of object\n\n        _this2.setState({\n          data: data,\n          loading: false\n        });\n\n        console.log(data); // fx = this.state.data[0];\n      }).catch(function (err) {\n        // log request error and prevent access to undefined state\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \" Loading... \"));\n      }\n\n      if (this.state.error || !this.state.data[4]) {\n        // if request failed or data is empty don't try to access it either\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \" An error occured \"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Secant\"), React.createElement(\"div\", {\n        style: {\n          padding: 20,\n          backgroundColor: '#fff1b8'\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: \"1\",\n        onChange: callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Insert by Yourself\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px'\n        },\n        title: \"Insert Eqation\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"fx\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"0\")), React.createElement(Input, {\n        size: \"large\",\n        name: \"x0\",\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"1\")), React.createElement(Input, {\n        size: \"large\",\n        name: \"x1\",\n        style: {\n          width: 300,\n          fontSize: \"18px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.secant(parseFloat(_this3.state.x0), parseFloat(_this3.state.x1));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.Graph && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          }\n        }, {\n          curvex0: curvex0\n        }, curvex0 = {\n          name: 'X',\n          x: yc,\n          y: funcx0,\n          marker: {\n            color: 'green'\n          }\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })))), this.state.Output && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: dataT,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \" \"))))), React.createElement(TabPane, {\n        tab: \"Insert By Database\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: {\n          width: 400\n        },\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 350,\n          padding: '3px',\n          background: '#0050b3'\n        },\n        title: \"Eqation from Database\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Equation\"), React.createElement(Input, {\n        name: \"fx\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[4].fx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"0\")), React.createElement(Input, {\n        name: \"xl\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[4].x0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: {\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"1\")), React.createElement(Input, {\n        name: \"xr\",\n        size: \"large\",\n        style: {\n          width: 300,\n          background: 'black',\n          color: 'white',\n          fontWeight: \"bold\"\n        },\n        value: this.state.data[4].x1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.secant(parseFloat(_this3.state.data[4].x0), parseFloat(_this3.state.data[4].x1));\n        },\n        style: {\n          fontSize: \"20px\",\n          marginLeft: 90,\n          color: '#ffffff',\n          background: '#12406A'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Request\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.Graphdb && //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n      React.createElement(Card, {\n        bordered: true,\n        style: {\n          marginBottom: 20,\n          width: 700,\n          height: 400,\n          border: \"2px solid black\",\n\n          /* background: \"#0000000\",*/\n          color: '#ffffff',\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Plot, {\n        data: [{\n          x: math.range(-5, 5, 0.5).toArray(),\n          y: xingraph.map(function (x) {\n            return math.compile(fx).eval({\n              x: x\n            });\n          }),\n          type: 'scatter',\n          marker: {\n            color: 'green'\n          }\n        }, curvex0 = {\n          name: 'X',\n          x: yc,\n          y: funcx0,\n          marker: {\n            color: 'red'\n          }\n        }],\n        layout: {\n          title: 'Plotfx'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [curveerror, curvexm],\n        layout: {\n          title: 'PlotX'\n        },\n        style: {\n          width: \"50%\",\n          float: \"left\",\n          height: \"360px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })))), this.state.Outputdb && React.createElement(\"div\", {\n        style: {\n          width: 600,\n          marginTop: 20,\n          marginLeft: 300,\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        bordered: true // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          width: 500\n        },\n        columns: columns,\n        dataSource: dataT,\n        pagination: {\n          pageSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \" \"))))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return secant;\n}(Component);\n\nexport default secant;","map":{"version":3,"sources":["C:/Users/Admin/Documents/numer/ProjectNumer-master/ProjectNumer-master/client/src/Root/SecantMethod.js"],"names":["React","Component","Card","Input","Button","Table","Row","Col","Plot","axios","Tabs","TabPane","math","require","dataT","curvexm","curveerror","yc","x","fError","iteration","curvex0","funcx0","columns","title","dataIndex","key","callback","console","log","xingraph","range","toArray","fx","secant","state","x0","x1","loading","error","data","showOutput","showGraph","handleChange","bind","y","sum","parseFloat","n","i","push","func","toFixed","Math","abs","createTable","name","setState","Output","Graph","Outputdb","Graphdb","xnew","xold","X","variable","compile","scope","eval","variables","length","event","target","value","get","then","res","catch","err","color","fontWeight","padding","backgroundColor","width","fontSize","marginLeft","background","marginBottom","height","border","float","map","type","marker","marginTop","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Input, Button, Table, Row, Col  } from 'antd';\nimport 'antd/dist/antd.css';\nimport Plot from 'react-plotly.js';\nimport axios from 'axios';\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\nvar math = require('mathjs')\nvar dataT = []\nvar curvexm = [];\nvar curveerror = [];\nvar yc = [];\nvar x = [];\nvar fError = [];\nvar iteration = [];\nvar curvex0 = [];\nvar funcx0=[]  \n\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\nfunction callback(key) {\n    console.log(key);\n}\nconst  xingraph = math.range(-5,5, 0.5).toArray();\nvar fx = \" \";\nclass secant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            x1: 0,\n            loading: true,\n            error: false,\n            data: [],\n            showOutput: false,\n            showGraph: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.secant = this.secant.bind(this);\n    }\n    secant(x0, x1) {\n        if (this.state.fx !== \"\") {\n            fx = this.state.fx;\n        }\n        else {\n            fx = this.state.data[4].fx;\n        }\n        var y = 0, sum = parseFloat(0.000000);\n        var n = 1, i = 1;\n\n        x.push(x0);\n        x.push(x1);\n        yc[0] = x0;\n        iteration[0] = 0;\n        fError[0] = \"-\";\n        do {\n            y = x[i] - (this.func(x[i]) * ((x[i] - x[i - 1]))) / (this.func(x[i]) - this.func(x[i - 1]));\n            x.push(y);\n            sum = this.error(y, x[i]);\n            yc[n] = y.toFixed(6);\n            \n            funcx0[i] = this.func(y).toFixed(6);\n            fError[n] = Math.abs(sum).toFixed(6);\n            iteration[i] = i;\n            n++;\n            i++;\n\n        } while (Math.abs(sum) > 0.000001);\n        this.createTable(yc, fError);\n        curvexm = {\n            name: 'y',\n            x: iteration,\n            y: yc\n\n        };\n        curveerror = {\n            name: 'error',\n            x: iteration,\n            y: fError\n        };\n        if (this.state.fx !== \"\") {\n            this.setState({\n                Output: true,\n                Graph: true\n            })\n        }\n        else {\n            this.setState({\n                Outputdb: true,\n                Graphdb: true\n            })\n        }\n    }\n    error(xnew, xold) {\n        return Math.abs((xnew - xold) / xnew);\n    }\n    func(X) {\n\n        if (this.state.fx !== \"\") {\n            var variable = math.compile(this.state.fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variable.eval(scope); //eval compile 'String'\n        }\n        else {\n            var variables = math.compile(this.state.data[4].fx);\n            let scope = { x: parseFloat(X) }; //แปลงค่า string หรือตัวแปรให้เป็น Number\n            return variables.eval(scope); //eval compile 'String'\n        }\n    }\n    createTable(y, error) {\n        dataT = []\n        for (var i = 0; i < y.length; i++) {\n            dataT.push({\n                iteration: i + 1,\n                y: y[i],\n                error: error[i]\n            });\n        }\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value //รันทุกครั้งเมื่อมีอินพุทใหม่เข้ามา \n        });\n    }\n    componentDidMount() {\n        axios.get('http://localhost:5000/api/bisectionfxs')\n            .then(res => {\n                const data = res.data.data; // get the data array instead of object\n                this.setState({ data, loading: false });\n                console.log(data);\n                // fx = this.state.data[0];\n\n            })\n            .catch(err => { // log request error and prevent access to undefined state\n                this.setState({ loading: false, error: true });\n                console.error(err);\n            })\n    }\n    render() {\n        \n        if (this.state.loading) {\n            return (\n                <div>\n                    <p> Loading... </p>\n                </div>\n            )\n        }\n        if (this.state.error || !this.state.data[4]) { // if request failed or data is empty don't try to access it either\n            return (\n                <div>\n                    <p> An error occured </p>\n                </div>\n            )\n        }\n        return (\n                <div >\n                    <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Secant</h2>\n                    <div style={{ padding: 20, backgroundColor: '#fff1b8' }}\n                        onChange={this.handleChange}\n                    >\n                        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                            <TabPane tab=\"Insert by Yourself\" key=\"1\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{  width: 350, padding: '3px' }} title=\"Insert Eqation\" bordered={false}>\n                                            <h2  style={{ fontWeight: \"bold\" }}>Equation</h2><Input size=\"large\" name=\"fx\" style={{ width: 300,fontSize: \"18px\", fontWeight: \"bold\" }}></Input>\n                                            <h2  style={{fontWeight: \"bold\" }}>X<sub>0</sub></h2>\n                                            <Input size=\"large\" name=\"x0\" style={{ width: 300 }}></Input>\n                                            <h2  style={{fontWeight: \"bold\" }}>X<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={{ width: 300,fontSize: \"18px\", fontWeight: \"bold\" }}></Input><br /><br />\n\n                                            <Button onClick={() => this.secant(parseFloat(this.state.x0), parseFloat(this.state.x1))}\n\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Submit</Button><br /><br />\n\n                                        </Card>\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.Graph &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: math.range(-5, 5, 0.5).toArray(),\n                                                            y:  xingraph.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                        },\n                                                        {\n                                                            curvex0\n                                                         },\n                                                        curvex0 = {\n                                                            name: 'X',\n                                                            x: yc,\n                                                            y: funcx0,\n                                                            marker: { color: 'green' },\n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <Plot\n                                                    data={[curveerror, curvexm]}\n                                                    layout={{ title: 'PlotX' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n                                {this.state.Output &&\n                                    <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                        <Card >\n\n                                            <div\n                                                bordered={true}\n                                            // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                            >\n\n                                                <Table style={{ width: 500 }} columns={columns} dataSource={dataT} pagination={{ pageSize: 10 }} > </Table>\n                                            </div>\n\n                                        </Card>\n                                    </div>\n                                }\n                            </TabPane>\n                            <TabPane tab=\"Insert By Database\" key=\"2\">\n                                <Row>\n                                    <Col style={{ width: 400 }} span={12}>\n                                        <Card style={{  width: 350, padding: '3px', background: '#0050b3' }} title=\"Eqation from Database\" bordered={false}>\n\n                                            <h2  style={{ color: 'white',fontWeight: \"bold\" }}>Equation</h2>\n                                            <Input name=\"fx\" size=\"large\" style={{ width: 300, background: 'black', color: 'white', fontWeight: \"bold\" }} value={this.state.data[4].fx}\n                                            />\n                                            <h2  style={{ color: 'white',fontWeight: \"bold\" }}>X<sub>0</sub></h2>\n                                            <Input name=\"xl\" size=\"large\" style={{ width: 300, background: 'black', color: 'white' , fontWeight: \"bold\"}} value={this.state.data[4].x0}\n                                            />\n                                            <h2  style={{ color: 'white',fontWeight: \"bold\" }}>X<sub>1</sub></h2>\n                                            <Input name=\"xr\" size=\"large\" style={{ width: 300, background: 'black', color: 'white' , fontWeight: \"bold\"}} value={this.state.data[4].x1}\n                                            />\n                                            <br /><br />\n                                            <Button\n                                                onClick={() => this.secant(parseFloat(this.state.data[4].x0), parseFloat(this.state.data[4].x1))}\n                                                style={{ fontSize: \"20px\", marginLeft: 90, color: '#ffffff', background: '#12406A' }}>Request\n                                            </Button><br /><br />\n                                        </Card>\n\n\n                                    </Col>\n                                    <Col span={12}>\n                                        {this.state.Graphdb &&\n                                            //https://stackoverflow.com/questions/52605304/show-hide-a-component-in-react-using-state/52605495\n                                            <Card\n                                                bordered={true}\n                                                style={{ marginBottom: 20, width: 700, height: 400, border: \"2px solid black\",/* background: \"#0000000\",*/ color: '#ffffff', float: \"left\" }}\n                                            >\n                                                <Plot\n                                                    data={[\n                                                        {\n                                                            x: math.range(-5, 5, 0.5).toArray(),\n                                                            y:  xingraph.map(function (x) {\n                                                                return math.compile(fx).eval({ x: x })\n                                                            }),\n                                                            type: 'scatter',\n                                                            marker: { color: 'green' },\n                                                        },\n                                                        curvex0 = {\n                                                            name: 'X',\n                                                            x: yc,\n                                                            y: funcx0,\n                                                            marker: { color: 'red' },\n                                                        },\n                                                    ]}\n                                                    layout={{ title: 'Plotfx' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <Plot\n                                                    data={[curveerror, curvexm]}\n                                                    layout={{ title: 'PlotX' }}\n                                                    style={{ width: \"50%\", float: \"left\", height: \"360px\" }}\n                                                />\n                                                <br /><br />\n                                            </Card>\n\n                                        }\n                                    </Col>\n                                </Row>\n\n                                {this.state.Outputdb &&\n                                    <div style={{ width: 600, marginTop: 20, marginLeft: 300, background: '#ECECEC', padding: '30px' }}>\n                                        <Card >\n                                            <div\n                                                bordered={true}\n                                            // style={{ width: \"50%\", float: \"inline-start\", marginBlockStart: \"2%\" }}\n                                            >\n                                                <Table style={{ width: 500 }} columns={columns} dataSource={dataT} pagination={{ pageSize: 10 }} > </Table>\n                                            </div>\n\n                                        </Card>\n                                    </div>\n                                }\n                            </TabPane>\n                        </Tabs>\n                    </div>\n                    <br />\n               </div>         \n        );\n    }\n}\nexport default secant;"]},"metadata":{},"sourceType":"module"}